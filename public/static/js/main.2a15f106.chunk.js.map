{"version":3,"sources":["helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducers.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","types","payload","eventClearActiveEvent","eventUpdated","eventUpdate","eventDeleted","eventLoaded","uiOpenModal","uiCloseModal","eventSetActive","eventStartAddNew","eventLogout","authCheckingFinish","authStartLogin","authLogin","authStartRegister","authStartTokenRenew","authLogout","checkingFinish","login","user","startLogout","dispatch","clear","logout","eventLogouy","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","RName","REmail","RPassword","RPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","dateEndInicial","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","tittleValid","setTittleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","startAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","eventos","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","bgcolor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isLoggedIn","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","checking","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"oPAAMA,EAASC,8CAEFC,EAAe,SAACC,EAAUC,GAAsB,IAAhBC,EAAe,uDAAR,MAE1CC,EAAI,GAAD,OAAIN,EAAJ,YAAeG,GAExB,MAAc,QAAXE,EACQE,MAAMD,GAENC,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAUP,MAKpBQ,EAAe,SAACT,EAAUC,GAAsB,IAAhBC,EAAe,uDAAR,MAE1CC,EAAI,GAAD,OAAIN,EAAJ,YAAeG,GAClBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAc,QAAXV,EACQE,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,UAAWK,KAIZN,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAUP,M,wBCpCpBY,EAAc,WAAc,IAAbC,EAAY,uDAAL,GAGhC,OAAOA,EAAOC,KACV,SAACC,GAAD,mBAAC,eACMA,GADP,IAEIC,IAAKC,IAAOF,EAAEC,KAAKE,SACnBC,MAAOF,IAAOF,EAAEI,OAAOD,eCwB5BE,EAAc,SAACC,GAAD,MAAU,CAE1BC,KAAMC,EAAMH,YACZI,QAASH,IAUAI,EAAwB,iBAAK,CAEtCH,KAAMC,EAAME,wBA6BVC,EAAe,SAACL,GAAD,MAAU,CAE3BC,KAAMC,EAAMI,YACZH,QAASH,IAiCPO,EAAe,iBAAK,CAEtBN,KAAMC,EAAMK,eAwBVC,EAAY,SAAChB,GAAD,MAAW,CACzBS,KAAMC,EAAMM,YACZL,QAASX,IC3IAU,EAAQ,CAEjBO,YAAa,kBACbC,aAAc,mBAEdC,eAAgB,qBAChBC,iBAAkB,wBAClBb,YAAa,kBACbK,sBAAuB,6BACvBC,aAAc,uBACdE,aAAc,uBACdC,YAAa,qBACbK,YAAa,wCAGbC,mBAAoB,qCACpBC,eAAgB,qBAChBC,UAAW,eACXC,kBAAmB,wBACnBC,oBAAqB,2BACrBC,WAAY,iBCgDVC,EAAgB,iBAAK,CACvBnB,KAAKC,EAAMY,qBAGTO,EAAO,SAACC,GAAD,MAAS,CAElBrB,KAAMC,EAAMc,UACZb,QAASmB,IAGAC,EAAc,WACvB,OAAO,SAACC,GACJnC,aAAaoC,QACbD,EAASE,KACTF,EF4DuB,CAC3BvB,KAAMC,EAAMyB,gBEzDVD,EAAQ,SAACJ,GAAD,MAAS,CAEnBrB,KAAMC,EAAMiB,a,gBCvFHS,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WACVD,EAAWH,IAITK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,ICd3BK,G,MAAc,WAEvB,IAAMd,EAAWe,cAFY,EAIuBX,EAAQ,CACxDY,OAAQ,GACRC,UAAW,KANc,mBAIrBC,EAJqB,KAIJC,EAJI,OAU6Bf,EAAQ,CAC9DgB,MAAM,GACNC,OAAQ,GACRC,UAAW,GACXC,WAAY,KAda,mBAUrBC,EAVqB,KAUDC,EAVC,KAiBtBT,EAAmBE,EAAnBF,OAAQC,EAAWC,EAAXD,UAERG,EAAoCI,EAApCJ,MAAMC,EAA8BG,EAA9BH,OAAQC,EAAsBE,EAAtBF,UAAUC,EAAYC,EAAZD,WAkB/B,OACI,qBAAKG,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SArBH,SAACzD,GFtBE,IAAC0D,EAAOC,EEuB1B3D,EAAE4D,iBAEF9B,GFzBmB4B,EEyBCZ,EFzBMa,EEyBCZ,EFxB/B,uCAAO,WAAOjB,GAAP,iBAAA+B,EAAA,sEAEe9E,EAAc,OAAO,CAAC2E,QAAMC,YAAU,QAFrD,cAEGG,EAFH,gBAGeA,EAAKC,OAHpB,QAGGzE,EAHH,QAKK0E,IACJrE,aAAasE,QAAQ,QAAS3E,EAAKI,OACnCC,aAAasE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDrC,EAASH,EAAM,CACXyC,IAAI9E,EAAK8E,IACT1B,KAAKpD,EAAKoD,SAGd2B,IAAKC,KAAK,QAAShF,EAAKiF,IAAK,SAd9B,2CAAP,yDE0CgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIjD,KAAK,OACLiD,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAOG,EACP2B,SAAUxB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACIjD,KAAK,WACLiD,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAOI,EACP0B,SAAUxB,MAGlB,qBAAKO,UAAU,aAAf,SACI,uBACIjD,KAAK,SACLiD,UAAU,YACVb,MAAM,kBAMtB,sBAAKa,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAhDA,SAACzD,GAGnB,GAFAA,EAAE4D,iBAECR,IAAcC,EACb,OAAOgB,IAAKC,KAAK,QAAS,0CAAuC,SFXhD,IAACZ,EAAOC,EAAUjB,EEcvCZ,GFdsB4B,EEcCP,EFdMQ,EEcCP,EFdSV,EEcCQ,EFb5C,uCAAO,WAAMpB,GAAN,iBAAA+B,EAAA,sEAEe9E,EAAc,WAAW,CAAC2E,QAAOC,WAAUjB,QAAM,QAFhE,cAEGoB,EAFH,gBAGeA,EAAKC,OAHpB,QAGGzE,EAHH,QAKK0E,IACJrE,aAAasE,QAAQ,QAAS3E,EAAKI,OACnCC,aAAasE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDrC,EAASH,EAAM,CACXyC,IAAI9E,EAAK8E,IACT1B,KAAKpD,EAAKoD,SAGd2B,IAAKC,KAAK,QAAShF,EAAKiF,IAAK,SAd9B,2CAAP,yDEsDgB,UACI,qBAAKf,UAAU,aAAf,SACI,uBACIjD,KAAK,OACLiD,UAAU,eACVgB,YAAY,SACZ9B,KAAK,QACLC,MAAOO,EACPuB,SAAUlB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACIjD,KAAK,QACLiD,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAOQ,EACPsB,SAAUlB,MAGlB,qBAAKC,UAAU,aAAf,SACI,uBACIjD,KAAK,WACLiD,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAOS,EACPqB,SAAUlB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACIjD,KAAK,WACLiD,UAAU,eACVgB,YAAY,0BACZ9B,KAAK,aACLC,MAAOU,EACPoB,SAAUlB,MAIlB,qBAAKC,UAAU,aAAf,SACI,uBACIjD,KAAK,SACLiD,UAAU,YACVb,MAAM,gC,QC7HzB+B,G,MAAS,WAElB,IAAM5C,EAAWe,cAEVH,EAAQiC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAnCnC,KAMP,OACI,sBAAKc,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SACKd,IAGL,yBAAQoC,QAVK,WACjBhD,EAASD,MAS0B2B,UAAU,yBAAzC,UACI,mBAAGA,UAAU,wBACb,kDCtBHuB,EAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNnF,MAAO,SACPoF,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCXNC,G,MAAgB,SAAC,GAAa,IAAZvF,EAAW,EAAXA,MAErBwF,EAAcxF,EAAdwF,MAAOlE,EAAOtB,EAAPsB,KAEb,OACI,gCACI,iCAASkE,IACT,uCAAUlE,EAAKc,a,kCCNd3B,EAAc,iBAAK,CAC5BR,KAAMC,EAAMO,cCOVgF,EAAe,CACjBC,QAAU,CACRC,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAI5BC,IAAMC,cAAc,SAEpB,IAAMC,EAAIvG,MAASwG,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,SAEzCC,EAAeJ,EAAIK,QAAQF,IAAI,EAAE,SAEjCG,EAAU,CACZjB,MAAM,GACNkB,MAAO,GACP5G,MAAOqG,EAAItG,SACXF,IAAK4G,EAAe1G,UAGb8G,EAAgB,WAEzB,IAAMnF,EAAWe,cAEVqE,EAAavC,aAAY,SAAAC,GAAK,OAAIA,EAAMuC,MAAxCD,UAEAE,EAAezC,aAAY,SAAAC,GAAK,OAAIA,EAAMyC,YAA1CD,YANwB,EAQGhF,mBAASqE,EAAItG,UARhB,mBAQxBmH,EARwB,KAQbC,EARa,OAUDnF,mBAASyE,EAAe1G,UAVvB,mBAUxBqH,EAVwB,KAUfC,EAVe,OAYOrF,oBAAS,GAZhB,mBAYxBsF,EAZwB,KAYXC,EAZW,OAcGvF,mBAAS2E,GAdZ,mBAcxBa,EAdwB,KAcbC,EAda,KAgBxBb,EAA0BY,EAA1BZ,MAAOlB,EAAmB8B,EAAnB9B,MAAO1F,EAAYwH,EAAZxH,MAAOH,EAAK2H,EAAL3H,IAE5B6H,qBAAU,WAEFD,EADDT,GAGeL,KAEnB,CAACK,EAAYS,IAEhB,IAAMrF,EAAoB,SAAC,GAAY,IAAXC,EAAU,EAAVA,OACxBoF,EAAc,2BACPD,GADM,kBAERnF,EAAOC,KAAOD,EAAOE,UAIxBoF,EAAa,WACfjG,ED9DyB,CAC7BvB,KAAMC,EAAMQ,eC8DR6G,EAAcd,GACdjF,EAASpB,MA4Cb,OACI,eAAC,IAAD,CACEsH,OAAQd,EAERe,eAAgBF,EAChBG,MAAOnC,EACPoC,eAAgB,IAChB3E,UAAU,QACV4E,iBAAiB,cAPnB,UAUQ,mCAAOhB,EAAc,gBAAgB,kBACrC,uBACA,uBACI5D,UAAU,YACVC,SAxCQ,SAACzD,GACrBA,EAAE4D,iBAEF,IAAMyE,EAAanI,IAAOE,GACpBkI,EAAWpI,IAAOD,GAExB,GAAGoI,EAAYE,cAAcD,GACzBjE,IAAKC,KAAK,QAAQ,mDAAmD,aADzE,CAKA,GAAGwB,EAAM0C,OAAOC,OAAO,EACnB,OAAOd,GAAe,GTlDF,IAACrH,ESsDrBwB,EADDsF,GTrDsB9G,ESsDKsH,ETpDlC,uCAAO,WAAM9F,GAAN,iBAAA+B,EAAA,+EAImBpE,EAAc,UAAD,OAAWa,EAAMoI,IAAMpI,EAAM,OAJ7D,cAIOwD,EAJP,gBAMmBA,EAAKC,OANxB,QAMOzE,EANP,QAQS0E,GAEJlC,EAASnB,EAAaL,IAGtB+D,IAAKC,KAAK,QAAShF,EAAKiF,IAAK,SAblC,kDAkBCoE,QAAQC,IAAR,MAlBD,0DAAP,uDAjDsB,SAACtI,GACvB,8CAAO,WAAOwB,EAAS+G,GAAhB,uBAAAhF,EAAA,+DAEcgF,IAAWhE,KAArBT,EAFJ,EAEIA,IAAI1B,EAFR,EAEQA,KAFR,kBAMmBjD,EAAc,SAAUa,EAAM,QANjD,cAMOwD,EANP,gBAOmBA,EAAKC,OAPxB,QAOOzE,EAPP,QASS0E,KAEJ1D,EAAMoI,GAAGpJ,EAAKwJ,OAAOJ,GACrBpI,EAAMsB,KAAK,CACPmH,IAAK3E,EACL1B,KAAMA,GAGVZ,EAASzB,EAAYC,KAjB1B,kDAqBCqI,QAAQC,IAAR,MArBD,0DAAP,wDSsGiBI,CAAYpB,IAGzBD,GAAe,GACfI,MAgBQ,UAKI,sBAAKvE,UAAU,aAAf,UACI,wDACA,cAAC,IAAD,CACIiB,SA9DM,SAACzE,GAC3BuH,EAAavH,GACb6H,EAAc,2BACPD,GADM,IAETxH,MAAOJ,MA2DS2C,MAAO2E,EACP9D,UAAU,oBAIlB,sBAAKA,UAAU,aAAf,UACI,qDACA,cAAC,IAAD,CACIiB,SA/DI,SAACzE,GACzByH,EAAWzH,GACX6H,EAAc,2BACPD,GADM,IAET3H,IAAKD,MA4DW2C,MAAO6E,EACPyB,QAAS3B,EACT9D,UAAU,oBAIlB,uBACA,sBAAKA,UAAU,aAAf,UACI,mDACA,uBACIjD,KAAK,OACLiD,UAAS,wBAAmBkE,GAAe,cAC3ClD,YAAY,uBACZ9B,KAAK,QACLwG,aAAa,MACbvG,MAAOmD,EACPrB,SAAUjC,IAEd,uBAAOkG,GAAG,YAAYlF,UAAU,uBAAhC,yCAGJ,sBAAKA,UAAU,aAAf,UACI,0BACIjD,KAAK,OACLiD,UAAU,eACVgB,YAAY,QACZ2E,KAAK,IACLzG,KAAK,QACLC,MAAOqE,EACPvC,SAAUjC,IAEd,uBAAOkG,GAAG,YAAYlF,UAAU,uBAAhC,yCAGJ,yBACIjD,KAAK,SACLiD,UAAU,oCAFd,UAII,mBAAGA,UAAU,gBACb,sDCrLX4F,EAAY,WAErB,IAAMtH,EAAWe,cAMjB,OAEQ,wBACIW,UAAU,sBACVsB,QARK,WACbhD,EAASf,MAKL,SAII,mBAAGyC,UAAU,mBCdhB6F,EAAiB,WAE1B,IAAMvH,EAAWe,cAMjB,OACI,yBACIW,UAAU,4BACVsB,QAPY,WAChBhD,EX+EJ,uCAAO,WAAMA,EAAU+G,GAAhB,mBAAAhF,EAAA,6DAEI6E,EAAIG,IAAWxB,SAASD,YAAxBsB,GAFJ,kBAMmBjJ,EAAc,UAAD,OAAWiJ,GAAM,GAAG,UANpD,cAMO5E,EANP,gBAQmBA,EAAKC,OARxB,QAQOzE,EARP,QAUS0E,GAEJlC,EAASjB,KAGTwD,IAAKC,KAAK,QAAShF,EAAKiF,IAAK,SAflC,kDAoBCoE,QAAQC,IAAR,MApBD,0DAAP,0DW3EI,UAII,mBAAGpF,UAAU,iBACb,sDCDZtD,IAAOoJ,OAAO,MAEd,IAAMC,EAAYC,YAAgBtJ,KAIrBuJ,EAAiB,WAI1B,IAAM3H,EAAWe,cAEjBiF,qBAAU,WAENhG,EZyFJ,uCAAO,WAAMA,GAAN,mBAAA+B,EAAA,+EAImBpE,EAAc,UAJjC,cAIOqE,EAJP,gBAMmBA,EAAKC,OANxB,OAMOzE,EANP,OAQOQ,EAASD,EAAcP,EAAKoK,SAElC5H,EAAShB,EAAYhB,IAVtB,kDAaC6I,QAAQC,IAAR,MAbD,0DAAP,yDYvFG,CAAC9G,IAV4B,MAYH6C,aAAY,SAAAC,GAAK,OAAIA,EAAMyC,YAAjDvH,EAZyB,EAYzBA,OAAOsH,EAZkB,EAYlBA,YACPhD,EAAOO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAlCT,IAbyB,EAeAhC,mBAASzC,aAAaC,QAAQ,aAAe,SAf7C,mBAezB+J,EAfyB,KAefC,EAfe,KAkDhC,OACI,sBAAKpG,UAAU,kBAAf,UACI,cAAC,EAAD,IAEA,cAAC,IAAD,CACI+F,UAAWA,EACXzJ,OAAQA,EACR+J,cAAc,QACdC,YAAY,MACZ/E,SAAUA,EACVgF,gBA1Ba,SAACzJ,EAAOF,EAAOH,EAAK+J,GAWzC,MAAO,CACH9B,MAVS,CACT+B,gBAAkB7F,IAAQ9D,EAAMsB,KAAKmH,IAApB,UAA8BzI,EAAM4J,SAAY,UACjEC,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAoBHC,mBA5CU,WAClBzI,EAASf,MA4CDyJ,cAzCU,SAACxK,GZLF,IAACM,EYMlBwB,GZNkBxB,EYMCN,EZNQ,CAE/BO,KAAMC,EAAMS,eACZR,QAASH,MY4CGmK,aAlCS,WACjB3I,EAASpB,MAkCDgK,YAAY,EACZC,OAxCS,SAAC3K,GAClB4J,EAAY5J,GACZL,aAAasE,QAAQ,WAAWjE,IAuCxB4K,KAAMjB,EACNkB,WAAY,CACRvK,MAAOuF,KAIbuB,GAAe,cAAC,EAAD,IAEjB,cAAC,EAAD,IAEA,cAAC,EAAD,Q,SC/FC0D,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,WACWC,EAET,EAFFC,UACGC,EACD,2CAGF,OACI,cAAC,IAAD,2BACQA,GADR,IAEID,UAAY,SAACE,GAAD,OACPJ,EACK,cAACC,EAAD,eAAeG,IACf,cAAC,IAAD,CAAUC,GAAG,gBCbtBC,GAAc,SAAC,GAIrB,IAHHN,EAGE,EAHFA,WACWC,EAET,EAFFC,UACGC,EACD,2CAEF,OACI,cAAC,IAAD,2BACQA,GADR,IAEID,UAAY,SAACE,GAAD,OACNJ,EAEI,cAAC,IAAD,CAAUK,GAAG,MADb,cAACJ,EAAD,eAAeG,SCDxBG,GAAY,WAErB,IAAMxJ,EAAWe,cACVuB,EAAOO,aAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAlCT,IAOP,OALA0D,qBAAU,WACNhG,Eb8BJ,uCAAO,WAAOA,GAAP,iBAAA+B,EAAA,sEAEepE,EAAc,cAF7B,cAEGqE,EAFH,gBAGeA,EAAKC,OAHpB,QAGGzE,EAHH,QAKK0E,IACJrE,aAAasE,QAAQ,QAAS3E,EAAKI,OACnCC,aAAasE,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDrC,EAASH,EAAM,CACXyC,IAAI9E,EAAK8E,IACT1B,KAAKpD,EAAKoD,SAGbZ,EAASJ,KAdX,2CAAP,yDa7BG,CAACI,IAIA,cAAC,IAAD,UACI,8BACI,eAAC,IAAD,WACI,cAAC,GAAD,CACIyJ,OAAK,EAACC,KAAK,SACXP,UAAWrI,EACXmI,aAAc3G,IAGlB,cAAC,GAAD,CACImH,OAAK,EAACC,KAAK,IACXP,UAAWxB,EACXsB,aAAc3G,IAGlB,cAAC,IAAD,CAAUgH,GAAG,c,kBCtC3BjJ,GAAc,CAChBsJ,UAAU,G,SCDRtJ,GAAe,CACjBrC,OAAO,GACPsH,YAAa,MCFXjF,GAAe,CACjB+E,WAAW,GCGFwE,GAAcC,aAAgB,CACvCxE,GDDoB,WAAiC,IAAhCvC,EAA+B,uDAAvBzC,GAAcyJ,EAAS,uCAEpD,OAAQA,EAAOrL,MACX,KAAKC,EAAMO,YACP,OAAO,2BACA6D,GADP,IAEIsC,WAAW,IAGnB,KAAK1G,EAAMQ,aACN,OAAO,2BACC4D,GADR,IAEIsC,WAAW,IAIpB,QACI,OAAOtC,ICffyC,SFA2B,WAA+B,IAA9BzC,EAA6B,uDAAvBzC,GAAcyJ,EAAS,uCAErD,OAAQA,EAAOrL,MAEX,KAAKC,EAAMS,eACP,kCACO2D,GADP,IAEIwC,YAAYwE,EAAOnL,UAG3B,KAAKD,EAAMH,YACP,kCACOuE,GADP,IAEI9E,OAAO,GAAD,oBACC8E,EAAM9E,QADP,CAEF8L,EAAOnL,YAInB,KAAKD,EAAME,sBACP,kCACOkE,GADP,IAEIwC,YAAa,OAGrB,KAAK5G,EAAMG,aACP,kCACOiE,GADP,IAEI9E,OACI8E,EAAM9E,OAAOC,KACT,SAAAC,GAAC,OAAKA,EAAE0I,KAAOkD,EAAOnL,QAAQiI,GAAKkD,EAAOnL,QAAUT,OAIpE,KAAKQ,EAAMK,aACP,kCACO+D,GADP,IAEI9E,OACI8E,EAAM9E,OAAO+L,QACT,SAAA7L,GAAC,OAAKA,EAAE0I,KAAO9D,EAAMwC,YAAYsB,MAEzCtB,YAAa,OAErB,KAAK5G,EAAMM,YACH,kCACO8D,GADP,IAEI9E,OAAO,aAAI8L,EAAOnL,WAE9B,KAAKD,EAAMW,YACH,sBACQgB,IAIhB,QACI,OAAOyC,IEtDnBC,KHFsB,WAA8B,IAA7BD,EAA4B,uDAAtBzC,GAAayJ,EAAS,uCAEnD,OAAQA,EAAOrL,MAEX,KAAKC,EAAMc,UACP,kCACOsD,GADP,IAEI6G,UAAU,GACPG,EAAOnL,SAGlB,KAAKD,EAAMY,mBACP,kCACWwD,GADX,IAEQ6G,UAAU,IAGtB,KAAKjL,EAAMiB,WACP,MAAM,CACEgK,UAAU,GAGtB,QACI,OAAO7G,MIzBbkH,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAOC,aAChBT,GACAI,GACIM,aAAgBC,QCLXC,GAAc,WACvB,OACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACI,cAAC,GAAD,O,OCFZK,IAASC,OAEL,cAAC,GAAD,IAEFC,SAASC,eAAe,U","file":"static/js/main.2a15f106.chunk.js","sourcesContent":["const baseUrl= process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchSinToken =(endpoint, data, method='GET')=>{\r\n\r\n    const url=`${baseUrl}/${endpoint}`;\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)   \r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchConToken =(endpoint, data, method='GET')=>{\r\n\r\n    const url=`${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token': token, \r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)   \r\n        })\r\n    }\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents=(events=[])=>{\r\n   \r\n   \r\n   return events.map(\r\n       (e)=>({\r\n           ...e,\r\n           end: moment(e.end).toDate(),\r\n           start: moment(e.start).toDate()\r\n       })\r\n   );\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startAddNew =(event)=>{\r\n    return async (dispatch,getState)=>{\r\n\r\n        const {uid,name}=getState().auth;\r\n\r\n        try{\r\n\r\n            const resp= await fetchConToken('events', event,'POST');\r\n            const body= await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                event.id=body.evento.id;\r\n                event.user={\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventAddNew = (event)=>({\r\n\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const setActive = (event)=>({\r\n\r\n    type: types.eventSetActive,\r\n    payload: event\r\n\r\n});\r\n\r\nexport const eventClearActiveEvent = ()=>({\r\n\r\n    type: types.eventClearActiveEvent,    \r\n\r\n});\r\n\r\nexport const startEventUpdate = (event)=>{\r\n\r\n    return async(dispatch) =>{\r\n\r\n        try {\r\n            \r\n            const resp= await fetchConToken(`events/${event.id}`, event,'PUT');\r\n\r\n            const body= await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                dispatch(eventUpdated(event));\r\n\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }           \r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventUpdated = (event)=>({\r\n\r\n    type: types.eventUpdate,\r\n    payload: event    \r\n\r\n});\r\n\r\nexport const startEventDelete = ()=>{\r\n\r\n    \r\n\r\n    return async(dispatch, getState) =>{\r\n\r\n        const {id}=getState().calendar.activeEvent;\r\n\r\n        try {\r\n            \r\n            const resp= await fetchConToken(`events/${id}`, {},'DELETE');\r\n\r\n            const body= await resp.json();\r\n\r\n            if(body.ok){\r\n\r\n                dispatch(eventDeleted());\r\n\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error')\r\n            }         \r\n            \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n};\r\n\r\nconst eventDeleted = ()=>({\r\n\r\n    type: types.eventDeleted  \r\n\r\n});\r\n\r\nexport const eventStartLoading = ()=>{\r\n    return async(dispatch) =>{\r\n\r\n        try {\r\n            \r\n            const resp= await fetchConToken('events');\r\n\r\n            const body= await resp.json();\r\n\r\n            const events = prepareEvents(body.eventos);\r\n\r\n            dispatch(eventLoaded(events));\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventLoaded=(events)=>({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout =()=>({\r\n    type: types.eventLogouy\r\n})","import { eventClearActiveEvent } from \"../actions/events\";\r\n\r\nexport const types = {\r\n\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent: '[event] Clear active event',\r\n    eventUpdated: '[event] Update event',\r\n    eventDeleted: '[event] Delete event',\r\n    eventLoaded: '[event] Load event',\r\n    eventLogout: '[event] Logout and clear active event',\r\n\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\nexport const startLogin = (email, password)=>{\r\n    return async (dispatch)=>{\r\n\r\n        const resp= await fetchSinToken('auth',{email,password},'POST');\r\n        const body= await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = (email, password, name)=>{\r\n    return async(dispatch)=>{\r\n\r\n        const resp= await fetchSinToken('auth/new',{email, password, name},'POST');\r\n        const body= await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);            \r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const startChecking=()=>{\r\n    return async (dispatch)=>{\r\n\r\n        const resp= await fetchConToken('auth/renew');\r\n        const body= await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);            \r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid:body.uid,\r\n                name:body.name\r\n            }))\r\n        }else{\r\n             dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst checkingFinish =()=>({\r\n    type:types.authCheckingFinish\r\n})\r\n\r\nconst login =(user)=>({\r\n\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = ()=>{\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(logout());\r\n        dispatch(eventLogout());\r\n    }\r\n}\r\n\r\nconst logout =(user)=>({\r\n\r\n    type: types.authLogout\r\n});\r\n\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: '',\r\n\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        RName:'',\r\n        REmail: '',\r\n        RPassword: '',\r\n        RPassword2: ''\r\n    });\r\n\r\n    const {lEmail, lPassword}=formLoginValues;\r\n\r\n    const {RName,REmail, RPassword,RPassword2}=formRegisterValues;\r\n\r\n    const handleLogin =(e)=>{\r\n        e.preventDefault();\r\n\r\n        dispatch(startLogin(lEmail,lPassword));\r\n    }\r\n\r\n    const handleRegister =(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(RPassword !== RPassword2){\r\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales','Error');\r\n        }\r\n\r\n        dispatch(startRegister(REmail,RPassword,RName));\r\n    }    \r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='RName'\r\n                                value={RName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='REmail'\r\n                                value={REmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='RPassword'\r\n                                value={RPassword}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name='RPassword2'\r\n                                value={RPassword2}\r\n                                onChange={handleRegisterInputChange} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nexport const NavBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {name} = useSelector(state => state.auth)\r\n\r\n    const handleLogout = ()=>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button onClick={handleLogout} className=\"btn btn-outline-danger\">\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>    \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const{title, user}= event;\r\n\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span> - {user.name}</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = ()=>({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = ()=>({\r\n    type: types.uiCloseModal\r\n})","import React, { useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, startAddNew, startEventUpdate } from '../../actions/events';\r\n\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n  };\r\n\r\n  Modal.setAppElement('#root');\r\n\r\n  const now=moment().minutes(0).seconds(0).add(1,'hours');\r\n\r\n  const dateEndInicial=now.clone().add(1,'hours');\r\n\r\n  const initEvent={\r\n      title:'',\r\n      notes: '',\r\n      start: now.toDate(),\r\n      end: dateEndInicial.toDate()\r\n  }\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n\r\n    const [dateEnd, setDateEnd] = useState(dateEndInicial.toDate());\r\n\r\n    const [tittleValid, setTittleValid] = useState(true);\r\n\r\n    const [formValues,setFormValues]= useState(initEvent);\r\n\r\n    const {notes, title, start, end}=formValues;\r\n\r\n    useEffect(() => {\r\n        if(activeEvent){\r\n            setFormValues(activeEvent);\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent,setFormValues])\r\n\r\n    const handleInputChange = ({target})=>{\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = ()=>{\r\n        dispatch(uiCloseModal());\r\n        setFormValues(initEvent);\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const handleStartDateChange = (e)=>{\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e)=>{\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm =(e)=>{\r\n        e.preventDefault();\r\n\r\n        const momentStart =moment(start);\r\n        const momentEnd =moment(end);\r\n\r\n        if(momentStart.isSameOrAfter(momentEnd)){\r\n            Swal.fire('Error','La fecha fin debe ser mayor a la fecha de inicio','error')\r\n            return;\r\n        }\r\n\r\n        if(title.trim().length<2){\r\n            return setTittleValid(false);\r\n        }\r\n\r\n        if(activeEvent){\r\n            dispatch(startEventUpdate(formValues));\r\n        }else{\r\n            dispatch(startAddNew(formValues));\r\n        }\r\n        \r\n        setTittleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n          isOpen={modalOpen}\r\n          //onAfterOpen={afterOpenModal}\r\n          onRequestClose={closeModal}\r\n          style={customStyles}\r\n          closeTimeoutMS={200}\r\n          className=\"modal\"\r\n          overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n                <h1> {(activeEvent)? 'Editar evento':'Nuevo evento'}</h1> \r\n                <hr />\r\n                <form \r\n                    className=\"container\"\r\n                    onSubmit={handleSubmitForm}\r\n                >\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                            value={dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                            value={dateEnd}\r\n                            minDate={dateStart}\r\n                            className=\"form-control\"\r\n                        />\r\n                    </div>\r\n\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input \r\n                            type=\"text\" \r\n                            className={`form-control ${!tittleValid && 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            autoComplete=\"off\"\r\n                            value={title}\r\n                            onChange={handleInputChange}\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea \r\n                            type=\"text\" \r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            name=\"notes\"\r\n                            value={notes}\r\n                            onChange={handleInputChange}\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const openModal =()=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        \r\n            <button\r\n                className=\"btn btn-primary fab\"\r\n                onClick={openModal}\r\n            >\r\n                <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n        \r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startEventDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete= ()=>{\r\n        dispatch(startEventDelete());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es';\r\nimport { NavBar } from '../ui/NavBar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { useState } from 'react';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartLoading, setActive } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport { useEffect } from 'react';\r\n\r\nmoment.locale('es');\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\n \r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    \r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(eventStartLoading());\r\n\r\n    }, [dispatch])\r\n\r\n    const {events,activeEvent} = useSelector(state => state.calendar);\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    const onDoubleClick = ()=>{\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e)=>{\r\n        dispatch(setActive(e));        \r\n    }\r\n\r\n    const onViewChange = (e)=>{\r\n        setLastView(e);\r\n        localStorage.setItem('lastView',e);\r\n    }\r\n    const onSelectSlot = ()=>{\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n   \r\n    \r\n    const eventStyleGetter = (event, start, end, isSelected)=>{\r\n\r\n        const style ={\r\n            backgroundColor: (uid === event.user._id) ? `${event.bgcolor}` : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white',\r\n            \r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            {(activeEvent)&& <DeleteEventFab />}\r\n\r\n            <AddNewFab />\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest //resto de los argumentos\r\n}) => {\r\n    \r\n    \r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (isLoggedIn)\r\n                    ? <Component {...props} />  // Si esta autenticado el usuario renderiza el componente\r\n                    : <Redirect to=\"/login\" />  // Si no lo esta, te envia al login\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes= {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isLoggedIn,\r\n    component: Component,\r\n    ...rest //resto de los argumentos\r\n}) => {\r\n    \r\n    return (\r\n        <Route \r\n            {...rest}\r\n            component={ (props) => (\r\n                (!isLoggedIn)\r\n                    ? <Component {...props} />  // Si no esta autenticado el usuario renderiza el componente\r\n                    : <Redirect to=\"/\" />  // Si no lo esta, te envia al login\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes= {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {uid} = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {        \r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div> \r\n                <Switch>\r\n                    <PublicRoute \r\n                        exact path='/login' \r\n                        component={LoginScreen}\r\n                        isLoggedIn={!!uid}                                                 \r\n                    />\r\n                        \r\n                    <PrivateRoute \r\n                        exact path='/' \r\n                        component={CalendarScreen}  \r\n                        isLoggedIn={!!uid}                                                 \r\n                    />\r\n                    \r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n             </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState ={\r\n    checking: true,\r\n\r\n}\r\n\r\nexport const authReducer =(state=initialState,action)=>{\r\n\r\n    switch (action.type) {\r\n        \r\n        case types.authLogin:\r\n            return{\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n\r\n        case types.authCheckingFinish:\r\n            return{ \r\n                    ...state,                   \r\n                    checking: false                   \r\n                }\r\n\r\n        case types.authLogout:\r\n            return{                                       \r\n                    checking: false                   \r\n                    }        \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    events:[],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = (state=initialState, action)=>{\r\n\r\n        switch (action.type) {\r\n            \r\n            case types.eventSetActive:\r\n                return{\r\n                    ...state,\r\n                    activeEvent:action.payload\r\n                }\r\n\r\n            case types.eventAddNew:\r\n                return{\r\n                    ...state,\r\n                    events:[\r\n                        ...state.events,\r\n                        action.payload\r\n                    ]                    \r\n                }\r\n\r\n            case types.eventClearActiveEvent:\r\n                return{\r\n                    ...state,\r\n                    activeEvent: null                  \r\n                 }\r\n\r\n            case types.eventUpdated:\r\n                return{\r\n                    ...state,\r\n                    events:\r\n                        state.events.map(\r\n                            e => (e.id === action.payload.id)? action.payload : e\r\n                        ),                        \r\n                    }\r\n\r\n            case types.eventDeleted:\r\n                return{\r\n                    ...state,\r\n                    events:\r\n                        state.events.filter(\r\n                            e => (e.id !== state.activeEvent.id)\r\n                        ),\r\n                    activeEvent: null                  \r\n                    }\r\n            case types.eventLoaded:\r\n                    return{\r\n                        ...state,\r\n                        events:[...action.payload]                                         \r\n                         }\r\n            case types.eventLogout:\r\n                    return{                        \r\n                         ...initialState                                       \r\n                         }\r\n\r\n\r\n            default:\r\n                return state;\r\n        }\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer =(state = initialState, action)=>{\r\n\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n\r\n        case types.uiCloseModal:\r\n             return {\r\n                  ...state,\r\n                 modalOpen: false\r\n             }    \r\n            \r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n})","import { applyMiddleware, createStore, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducers\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store= createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\n\nReactDOM.render(\n  \n    <CalendarApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}